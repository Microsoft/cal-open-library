OBJECT Codeunit 50058 DotNet_Word.Stretch
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      DotNetStretch@1000 : DotNet "'DocumentFormat.OpenXml, Version=2.0.5022.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Drawing.Stretch";

    [External]
    PROCEDURE Stretch@1();
    BEGIN
      DotNetStretch := DotNetStretch.Stretch;
    END;

    [External]
    PROCEDURE StretchFromOuterXml@2(OuterXml@1000 : Text);
    BEGIN
      DotNetStretch := DotNetStretch.Stretch(OuterXml);
    END;

    [External]
    PROCEDURE OuterXml@3() : Text;
    BEGIN
      EXIT(DotNetStretch.OuterXml);
    END;

    [External]
    PROCEDURE InnerText@4() : Text;
    BEGIN
      EXIT(DotNetStretch.InnerText);
    END;

    [External]
    PROCEDURE AppendFillRectangle@5();
    VAR
      DotNetFillRectangle@1000 : DotNet "'DocumentFormat.OpenXml, Version=2.0.5022.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Drawing.FillRectangle";
      OpenXmlDotNetHelper@1001 : Codeunit 50067;
    BEGIN
      //We need this to deal with .NET Generics:
      OpenXmlDotNetHelper.AppendGeneric(DotNetStretch, DotNetFillRectangle.FillRectangle);
    END;

    PROCEDURE SetStretch@6(VAR NewDotNetStretch@1000 : DotNet "'DocumentFormat.OpenXml, Version=2.0.5022.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Drawing.Stretch");
    BEGIN
      DotNetStretch := NewDotNetStretch;
    END;

    PROCEDURE GetStretch@7(VAR CurrentDotNetStretch@1000 : DotNet "'DocumentFormat.OpenXml, Version=2.0.5022.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Drawing.Stretch");
    BEGIN
      CurrentDotNetStretch := DotNetStretch;
    END;

    BEGIN
    END.
  }
}

