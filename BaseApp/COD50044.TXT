OBJECT Codeunit 50044 DotNet_Word.Anchor
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      DotNetAnchor@1000 : DotNet "'DocumentFormat.OpenXml, Version=2.0.5022.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Drawing.Wordprocessing.Anchor";
      OpenXmlDotNetHelper@1001 : Codeunit 50067;

    [External]
    PROCEDURE Create@1();
    BEGIN
      DotNetAnchor := DotNetAnchor.Anchor;
    END;

    [External]
    PROCEDURE CreateFromOuterXml@2(OuterXml@1000 : Text);
    BEGIN
      DotNetAnchor := DotNetAnchor.Anchor(OuterXml);
    END;

    [External]
    PROCEDURE GetOuterXml@3() : Text;
    BEGIN
      EXIT(DotNetAnchor.OuterXml);
    END;

    [External]
    PROCEDURE GetInnerText@4() : Text;
    BEGIN
      EXIT(DotNetAnchor.InnerText);
    END;

    [External]
    PROCEDURE SetAllowOverlap@5(NewAllowOverlap@1000 : Boolean);
    VAR
      DotNetBooleanValue@1001 : DotNet "'DocumentFormat.OpenXml, Version=2.0.5022.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.BooleanValue";
    BEGIN
      DotNetAnchor.AllowOverlap := DotNetBooleanValue.BooleanValue(NewAllowOverlap);
    END;

    [External]
    PROCEDURE SetLayoutInCell@6(NewLayoutInCell@1000 : Boolean);
    VAR
      DotNetBooleanValue@1001 : DotNet "'DocumentFormat.OpenXml, Version=2.0.5022.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.BooleanValue";
    BEGIN
      DotNetAnchor.LayoutInCell := DotNetBooleanValue.BooleanValue(NewLayoutInCell);
    END;

    [External]
    PROCEDURE SetLocked@7(NewLocked@1000 : Boolean);
    VAR
      DotNetBooleanValue@1001 : DotNet "'DocumentFormat.OpenXml, Version=2.0.5022.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.BooleanValue";
    BEGIN
      DotNetAnchor.Locked := DotNetBooleanValue.BooleanValue(NewLocked);
    END;

    [External]
    PROCEDURE SetBehindDoc@8(NewBehindDoc@1000 : Boolean);
    VAR
      DotNetBooleanValue@1001 : DotNet "'DocumentFormat.OpenXml, Version=2.0.5022.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.BooleanValue";
    BEGIN
      DotNetAnchor.BehindDoc := DotNetBooleanValue.BooleanValue(NewBehindDoc);
    END;

    [External]
    PROCEDURE SetSimplePos@9(NewSimplePos@1000 : Boolean);
    VAR
      DotNetBooleanValue@1001 : DotNet "'DocumentFormat.OpenXml, Version=2.0.5022.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.BooleanValue";
    BEGIN
      DotNetAnchor.SimplePos := DotNetBooleanValue.BooleanValue(NewSimplePos);
    END;

    [External]
    PROCEDURE SetRelativeHeight@10(NewRelativeHeight@1000 : Integer);
    VAR
      DotNetUInt32Value@1001 : DotNet "'DocumentFormat.OpenXml, Version=2.0.5022.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.UInt32Value";
    BEGIN
      DotNetAnchor.RelativeHeight := DotNetUInt32Value.FromUInt32(NewRelativeHeight);
    END;

    [External]
    PROCEDURE SetDistanceFromRight@11(NewDistance@1000 : Integer);
    VAR
      DotNetUInt32Value@1001 : DotNet "'DocumentFormat.OpenXml, Version=2.0.5022.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.UInt32Value";
    BEGIN
      DotNetAnchor.DistanceFromRight := DotNetUInt32Value.FromUInt32(NewDistance);
    END;

    [External]
    PROCEDURE SetDistanceFromLeft@12(NewDistance@1000 : Integer);
    VAR
      DotNetUInt32Value@1001 : DotNet "'DocumentFormat.OpenXml, Version=2.0.5022.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.UInt32Value";
    BEGIN
      DotNetAnchor.DistanceFromLeft := DotNetUInt32Value.FromUInt32(NewDistance);
    END;

    [External]
    PROCEDURE SetDistanceFromTop@13(NewDistance@1000 : Integer);
    VAR
      DotNetUInt32Value@1001 : DotNet "'DocumentFormat.OpenXml, Version=2.0.5022.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.UInt32Value";
    BEGIN
      DotNetAnchor.DistanceFromTop := DotNetUInt32Value.FromUInt32(NewDistance);
    END;

    [External]
    PROCEDURE SetDistanceFromBottom@14(NewDistance@1000 : Integer);
    VAR
      DotNetUInt32Value@1001 : DotNet "'DocumentFormat.OpenXml, Version=2.0.5022.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.UInt32Value";
    BEGIN
      DotNetAnchor.DistanceFromBottom := DotNetUInt32Value.FromUInt32(NewDistance);
    END;

    [External]
    PROCEDURE AppendSimplePosition@15(X@1000 : Integer;Y@1001 : Integer);
    VAR
      DotNetInt64Value@1002 : DotNet "'DocumentFormat.OpenXml, Version=2.0.5022.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Int64Value";
      DotNetSimplePosition@1003 : DotNet "'DocumentFormat.OpenXml, Version=2.0.5022.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Drawing.Wordprocessing.SimplePosition";
    BEGIN
      DotNetSimplePosition := DotNetSimplePosition.SimplePosition;
      DotNetSimplePosition.X := DotNetInt64Value.FromInt64(X);
      DotNetSimplePosition.Y := DotNetInt64Value.FromInt64(Y);
      //We need this to deal with .NET Generics:
      OpenXmlDotNetHelper.AppendGeneric(DotNetAnchor, DotNetSimplePosition);
    END;

    [External]
    PROCEDURE AppendExtent@16(Cx@1000 : Integer;Cy@1001 : Integer);
    VAR
      DotNetInt64Value@1002 : DotNet "'DocumentFormat.OpenXml, Version=2.0.5022.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Int64Value";
      DotNetExtent@1003 : DotNet "'DocumentFormat.OpenXml, Version=2.0.5022.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Drawing.Wordprocessing.Extent";
    BEGIN
      DotNetExtent := DotNetExtent.Extent;
      DotNetExtent.Cx := DotNetInt64Value.FromInt64(Cx);
      DotNetExtent.Cy := DotNetInt64Value.FromInt64(Cy);
      //We need this to deal with .NET Generics:
      OpenXmlDotNetHelper.AppendGeneric(DotNetAnchor, DotNetExtent);
    END;

    [External]
    PROCEDURE AppendEffectExtent@17(LeftEdge@1000 : Integer;TopEdge@1001 : Integer;RightEdge@1002 : Integer;BottomEdge@1003 : Integer);
    VAR
      DotNetInt64Value@1004 : DotNet "'DocumentFormat.OpenXml, Version=2.0.5022.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Int64Value";
      DotNetEffectExtent@1005 : DotNet "'DocumentFormat.OpenXml, Version=2.0.5022.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Drawing.Wordprocessing.EffectExtent";
    BEGIN
      DotNetEffectExtent := DotNetEffectExtent.EffectExtent;
      DotNetEffectExtent.LeftEdge := DotNetInt64Value.FromInt64(LeftEdge);
      DotNetEffectExtent.TopEdge := DotNetInt64Value.FromInt64(TopEdge);
      DotNetEffectExtent.RightEdge := DotNetInt64Value.FromInt64(RightEdge);
      DotNetEffectExtent.BottomEdge := DotNetInt64Value.FromInt64(BottomEdge);
      //We need this to deal with .NET Generics:
      OpenXmlDotNetHelper.AppendGeneric(DotNetAnchor, DotNetEffectExtent);
    END;

    [External]
    PROCEDURE AppendVerticalPosition@18(VAR WordVerticalPosition@1000 : Codeunit 50045);
    VAR
      DotNetVerticalPosition@1001 : DotNet "'DocumentFormat.OpenXml, Version=2.0.5022.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Drawing.Wordprocessing.VerticalPosition";
    BEGIN
      WordVerticalPosition.GetVerticalPosition(DotNetVerticalPosition);
      //We need this to deal with .NET Generics:
      OpenXmlDotNetHelper.AppendGeneric(DotNetAnchor, DotNetVerticalPosition);
    END;

    [External]
    PROCEDURE AppendHorizontalPosition@19(VAR WordHorizontalPosition@1000 : Codeunit 50046);
    VAR
      DotNetHorizontalPosition@1001 : DotNet "'DocumentFormat.OpenXml, Version=2.0.5022.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Drawing.Wordprocessing.HorizontalPosition";
    BEGIN
      WordHorizontalPosition.GetHorizontalPosition(DotNetHorizontalPosition);
      //We need this to deal with .NET Generics:
      OpenXmlDotNetHelper.AppendGeneric(DotNetAnchor, DotNetHorizontalPosition);
    END;

    [External]
    PROCEDURE AppendWrapSquare@20(VAR WordWrapSquare@1000 : Codeunit 50047);
    VAR
      DotNetWrapSquare@1001 : DotNet "'DocumentFormat.OpenXml, Version=2.0.5022.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Drawing.Wordprocessing.WrapSquare";
    BEGIN
      WordWrapSquare.GetWrapSquare(DotNetWrapSquare);
      //We need this to deal with .NET Generics:
      OpenXmlDotNetHelper.AppendGeneric(DotNetAnchor, DotNetWrapSquare);
    END;

    [External]
    PROCEDURE AppendWrapTopBottom@21(VAR WordWrapTopBottom@1000 : Codeunit 50048);
    VAR
      DotNetWrapTopBottom@1001 : DotNet "'DocumentFormat.OpenXml, Version=2.0.5022.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Drawing.Wordprocessing.WrapTopBottom";
    BEGIN
      WordWrapTopBottom.GetWrapTopBottom(DotNetWrapTopBottom);
      //We need this to deal with .NET Generics:
      OpenXmlDotNetHelper.AppendGeneric(DotNetAnchor, DotNetWrapTopBottom);
    END;

    [External]
    PROCEDURE AppendDocProperties@22(VAR WordDocProperties@1000 : Codeunit 50049);
    VAR
      DotNetDocProperties@1001 : DotNet "'DocumentFormat.OpenXml, Version=2.0.5022.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Drawing.Wordprocessing.DocProperties";
    BEGIN
      WordDocProperties.GetDocProperties(DotNetDocProperties);
      //We need this to deal with .NET Generics:
      OpenXmlDotNetHelper.AppendGeneric(DotNetAnchor, DotNetDocProperties);
    END;

    [External]
    PROCEDURE AppendGraphicFrameLocks@23(VAR WordGraphicFrameLocks@1000 : Codeunit 50050);
    VAR
      DotNetGraphicFrameLocks@1001 : DotNet "'DocumentFormat.OpenXml, Version=2.0.5022.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Drawing.GraphicFrameLocks";
      DotNetNonVisualGraphicFrameDrawingProperties@1002 : DotNet "'DocumentFormat.OpenXml, Version=2.0.5022.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Drawing.Wordprocessing.NonVisualGraphicFrameDrawingProperties";
    BEGIN
      WordGraphicFrameLocks.GetGraphicFrameLocks(DotNetGraphicFrameLocks);
      DotNetNonVisualGraphicFrameDrawingProperties := DotNetNonVisualGraphicFrameDrawingProperties.NonVisualGraphicFrameDrawingProperties;
      //We need this to deal with .NET Generics:
      OpenXmlDotNetHelper.AppendGeneric(DotNetNonVisualGraphicFrameDrawingProperties, DotNetGraphicFrameLocks);
      OpenXmlDotNetHelper.AppendGeneric(DotNetAnchor, DotNetNonVisualGraphicFrameDrawingProperties);
    END;

    [External]
    PROCEDURE AppendPicture@24(VAR WordPicture@1000 : Codeunit 50051);
    VAR
      DotNetPicture@1001 : DotNet "'DocumentFormat.OpenXml, Version=2.0.5022.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Drawing.Pictures.Picture";
      DotNetGraphicData@1002 : DotNet "'DocumentFormat.OpenXml, Version=2.0.5022.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Drawing.GraphicData";
      DotNetGraphic@1003 : DotNet "'DocumentFormat.OpenXml, Version=2.0.5022.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Drawing.Graphic";
      DotNetStringValue@1004 : DotNet "'DocumentFormat.OpenXml, Version=2.0.5022.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.StringValue";
    BEGIN
      WordPicture.GetPicture(DotNetPicture);
      DotNetGraphic := DotNetGraphic.Graphic;
      DotNetGraphicData := DotNetGraphicData.GraphicData;
      DotNetGraphicData.Uri := DotNetStringValue.FromString('http://schemas.openxmlformats.org/drawingml/2006/picture');
      //We need this to deal with .NET Generics:
      OpenXmlDotNetHelper.AppendGeneric(DotNetGraphicData, DotNetPicture);
      OpenXmlDotNetHelper.AppendGeneric(DotNetGraphic, DotNetGraphicData);
      OpenXmlDotNetHelper.AppendGeneric(DotNetAnchor, DotNetGraphic);
    END;

    PROCEDURE SetAnchor@25(VAR NewDotNetAnchor@1000 : DotNet "'DocumentFormat.OpenXml, Version=2.0.5022.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Drawing.Wordprocessing.Anchor");
    BEGIN
      DotNetAnchor := NewDotNetAnchor;
    END;

    PROCEDURE GetAnchor@26(VAR CurrentDotNetAnchor@1000 : DotNet "'DocumentFormat.OpenXml, Version=2.0.5022.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Drawing.Wordprocessing.Anchor");
    BEGIN
      CurrentDotNetAnchor := DotNetAnchor;
    END;

    BEGIN
    END.
  }
}

